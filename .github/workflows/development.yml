name: Pull Request Workflow

on:
  pull_request:
    types:
      - opened
      - edited
      - synchronize
      - reopened

jobs:
  format:
    name: Check formatting
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Tarraform
        run: ./bin/install_deb.sh
      - name: Check Formatting
        id: formattingCheck
        run: ./bin/check_formatting.sh
      - id: set
        run: |
          echo "::set-output name=run_mock::yes"
    outputs:
      run_live: ${{ steps.set.outputs.run_mock }}
  mock:
    name: Test mock terraform-aws-networking
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs:
      - format
    if: needs.format.outputs.run_mock == 'yes'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Tarraform
        run: ./bin/install_deb.sh
      - name: Run Tests
        run: ./bin/run_tests.sh
      - id: set
        run: |
          echo "::set-output name=run_live::yes"
    outputs:
      run_live: ${{ steps.set.outputs.run_live }}
  integration:
    name: Test live integration terraform-aws-networking
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs:
      - mock
    if: needs.mock.outputs.run_live == 'yes'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Tarraform
        run: ./bin/install_deb.sh
      - name: Run Tests
        run: ./bin/run_live_tests.sh
  cleanup:
    name: Cleanup live integration terraform-aws-networking
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs:
      - integration
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Tarraform
        run: ./bin/install_aws_nuke.sh
      - name: Run Tests
        run: ./bin/run_nuke.sh
